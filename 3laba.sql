 /*14 задание 
SELECT * FROM t_material;
SELECT * FROM T_store;
SELECT * FROM t_deliver;  

  /* 15 задание */ 
SELECT id_material, name FROM t_material;

  /* 16 задание */
SELECT surname, name, father_name FROM T_EMPLOYER; 

/*17 задание*/
  SELECT * FROM T_EMPLOYER 
    WHERE sex LIKE 'М';


/*18 задание */
SELECT * FROM t_caterer
		WHERE id_caterer IN
    (SELECT id_caterer FROM t_supply
       WHERE supply_date >= '01.04.2009' 
       AND supply_date <= '30.06.2009');

/* 19 задание */
SELECT * FROM T_SECTION
  WHERE ID_SECTION NOT IN
    (SELECT ID_SECTION FROM T_DELIVER
       WHERE DELIVER_DATE LIKE '%07.2009');

/* 20 задание */
SELECT name FROM t_section
   		WHERE id_section IN 
     (SELECT id_section FROM t_deliver
     	WHERE deliver_data = SYSDATE);

/* 21 задание */
SELECT NAME FROM T_MATERIAL 
  WHERE ID_MATERIAL IN
    (SELECT ID_MATERIAL FROM T_SUPPLY 
       WHERE SUPPLY_DATE LIKE '%2017');

/* 22 задание*/
SELECT NAME FROM T_MATERIAL 
  WHERE ID_MATERIAL NOT IN
    (SELECT ID_MATERIAL FROM T_SUPPLY 
       WHERE SUPPLY_DATE LIKE '%2017')
  AND ID_MATERIAL IN 
    (SELECT ID_MATERIAL FROM T_SURPLUS 
       WHERE VOLUME LIKE 0);

/* 23 задание */
SELECT T_SECTION.ID_SECTION, T_SECTION.NAME, T_EMPLOYER.NAME,
       T_EMPLOYER.SURNAME, T_EMPLOYER.FATHER_NAME
  FROM T_SECTION, T_EMPLOYER
  WHERE T_SECTION.ID_EMPLOYER = T_EMPLOYER.ID_EMPLOYER;

/* 24 задание*/
SELECT T_SECTION.ID_SECTION, T_SECTION.NAME, T_EMPLOYER.NAME,
       T_EMPLOYER.SURNAME, T_EMPLOYER.FATHER_NAME, T_JOB.NAME
  FROM T_SECTION, T_EMPLOYER, T_JOB
  WHERE T_SECTION.ID_EMPLOYER = T_EMPLOYER.ID_EMPLOYER
  AND T_EMPLOYER.ID_JOB = T_JOB.ID_JOB;

/* 25 задание */
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, 
       T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER, T_MATERIAL, T_SUPPLY, T_INPRICE
  WHERE T_CATERER.ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.03.2009')
  AND T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  AND T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  AND T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER;

/* 26 задание*/
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, 
       T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER, T_MATERIAL, T_SUPPLY, T_INPRICE
  WHERE T_CATERER.ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.04.2009')
  AND T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  AND T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  AND T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  AND T_CATERER.LEGAL_ADDRES LIKE 'Пермь%';

/* 27 задание */
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME,
       T_STORE.NAME, T_SURPLUS.VOLUME
  FROM T_MATERIAL, T_STORE, T_SURPLUS
  WHERE T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  AND T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL;

/* 28 задание */
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, 
       T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER JOIN T_MATERIAL
    ON T_CATERER.ID_CATERER IN 
      (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.03.2009')
  JOIN T_SUPPLY 
    ON T_SUPPLY.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
      AND T_SUPPLY.ID_CATERER = T_CATERER.ID_CATERER
  JOIN T_INPRICE
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;

/* 29 задание */
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, 
       T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER LEFT JOIN T_SUPPLY 
    ON T_SUPPLY.ID_CATERER = T_CATERER.ID_CATERER
  LEFT JOIN T_MATERIAL
    ON T_SUPPLY.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
  LEFT JOIN T_INPRICE
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;

/* 30 задание */
SELECT T_STORE.ID_STORE, T_STORE.NAME,
       T_MATERIAL.NAME, T_SURPLUS.VOLUME
  FROM T_STORE LEFT JOIN T_SURPLUS
    ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  LEFT JOIN T_MATERIAL 
    ON T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL
  ORDER BY T_STORE.ID_STORE;

/* 31 задание */
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME,
       T_MESSURE.NAME, T_INPRICE.PRICE
  FROM T_MATERIAL JOIN T_MESSURE 
    ON T_MATERIAL.ID_MESSURE = T_MESSURE.ID_MESSURE
  JOIN T_INPRICE 
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
      AND T_INPRICE.PRICE_DATE IN
        (SELECT PRICE_DATE FROM T_INPRICE 
           WHERE PRICE_DATE BETWEEN '01.07.2009' AND '30.09.2009');

/* 32 задание */
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME,
       T_MESSURE.NAME, T_INPRICE.PRICE
  FROM T_MATERIAL LEFT JOIN T_MESSURE 
    ON T_MATERIAL.ID_MESSURE = T_MESSURE.ID_MESSURE
  LEFT JOIN T_INPRICE 
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL

/* 33 задание */
ALTER TABLE T_EMPLOYER
  ADD ID_MANAGER INT;
UPDATE T_EMPLOYER
  SET ID_MANAGER = 1
    WHERE ID_EMPLOYER BETWEEN 2 AND 4;
UPDATE T_EMPLOYER
  SET ID_MANAGER = 3
    WHERE ID_EMPLOYER LIKE 5;

/* 34 задание */
ALTER TABLE T_GROUP
  ADD MINI_GROUP INT;
UPDATE T_GROUP
  SET MINI_GROUP = 1
    WHERE ID_GROUP BETWEEN 1 AND 3;
UPDATE T_GROUP
  SET MINI_GROUP = 2
    WHERE ID_GROUP > 3;
SELECT * FROM T_GROUP 
  WHERE MINI_GROUP = 1;
SELECT * FROM T_GROUP 
  WHERE MINI_GROUP = 2;

/* З5 задание */
CREATE TABLE T_Exemp(
  ID_Employer INT NOT NULL,
  Name NVARCHAR2(10) NOT NULL,
  Surname NVARCHAR2(20) NOT NULL,
  Father_Name NVARCHAR2(20),
  Bithdate DATE,
  ID_JOB INT,
  ID_MANAGER INT,
  CONSTRAINT PK_Exemp
    PRIMARY KEY (ID_EMPLOYER)
);
INSERT INTO T_EXEMP (ID_EMPLOYER, NAME, SURNAME, FATHER_NAME, 
    BITHDATE, ID_JOB, ID_MANAGER)
  VALUES (1, 'Имя', 'Фамилия', 'Отчество', '24.02.1988', 2, 1);

/* 36 задание */
ALTER TABLE T_EXEMP
  ADD DISMISSED DATE;
UPDATE T_EXEMP
  SET DISMISSED = '14.10.1988';

/* 37 задание */
CREATE TABLE T_Contact(
  ID_Contact INT NOT NULL,
  ID_Caterer INT,
  Name NVARCHAR2(20) NOT NULL,
  Surname NVARCHAR2(20) NOT NULL,
  Father_Name NVARCHAR2(30),
  Telephon NVARCHAR2(12) NOT NULL,
  CONSTRAINT PK_Contact
    PRIMARY KEY (ID_CONTACT),
  CONSTRAINT FK_Contact_Caterer
    FOREIGN KEY (ID_CATERER) REFERENCES T_CATERER(ID_CATERER) 
      ON DELETE CASCADE
);
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (1, 1, 'Имя1', 'Фамилия1', 'Отчество1', '89955123582');
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (2, 2, 'Имя2', 'Фамилия2', 'Отчество2', '89954823547');
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (3, 3, 'Имя3', 'Фамилия3', 'Отчество3', '89991989284');
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (4, 3, 'Имя4', 'Фамилия4', 'Отчество4', '89945522820');
INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (5, 5, 'Имя5', 'Фамилия5', 'Отчество5', '89945621824');
SELECT NAME, SURNAME, FATHER_NAME, TELEPHON FROM T_CONTACT;

/* 38 задание */
SELECT * FROM T_CATERER
  ORDER BY NAME;

/* 39 задание */
SELECT * FROM T_CATERER JOIN T_CONTACT
    ON T_CATERER.ID_CATERER = T_CONTACT.ID_CATERER
  ORDER BY T_CATERER.NAME, T_CONTACT.SURNAME, T_CONTACT.NAME, FATHER_NAME;

/* 40 задание */
SELECT T_STORE.NAME, T_MATERIAL.NAME, T_SURPLUS.VOLUME
  FROM T_STORE LEFT JOIN T_SURPLUS 
    ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  LEFT JOIN T_MATERIAL 
    ON T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL
  ORDER BY T_STORE.ID_STORE, T_SURPLUS.VOLUME DESC; 
/* 41 задание */
SELECT T_MATERIAL.NAME AS "Material", T_CATERER.NAME AS "Caterer", SUM(T_SUPPLY.VOLUME) AS "Volume"
  FROM T_CATERER JOIN T_SUPPLY 
    ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  JOIN T_MATERIAL
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
     AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME, T_CATERER.NAME
  ORDER BY T_CATERER.NAME, T_MATERIAL.NAME;

/* 42 адание */
SELECT T_MATERIAL.NAME AS "Material", AVG(T_SUPPLY.VOLUME * T_INPRICE.PRICE) AS "Sred"
  FROM T_MATERIAL LEFT JOIN T_SUPPLY 
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  LEFT JOIN T_INPRICE 
    ON T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME
  ORDER BY T_MATERIAL.NAME;

/* 43 задание */
SELECT T_MATERIAL.NAME AS "Material", SUM(T_SUPPLY.VOLUME) AS "Summ"
  FROM T_MATERIAL LEFT JOIN T_SUPPLY 
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME
  ORDER BY T_MATERIAL.NAME;

 /* 44 задание*/ 
SELECT t_material.name AS "material", AVG(t_supply.volume * t_inprice.price), SUM(AVG(t_supply.volume * t_inprice.price)*t_inprice.price)
     ON t_material.id_material = t_supply.id_material
   LEFT JOIN t_inprice
     ON t_surplus.id_store = t_store.id_store
   GROUP BY t_material.name ORDER BY t_material.name;

/* 45 задание */
SELECT NAME FROM T_STORE INNER JOIN T_SURPLUS
  ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  GROUP BY NAME HAVING SUM(VOLUME) = 0;

/* 46 задание */
SELECT NAME FROM T_CATERER INNER JOIN T_SUPPLY
  ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  WHERE SUPPLY_DATE >= '01.01.2017' 
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY NAME HAVING SUM(VOLUME) < 1000;

/* 47 задание*/
SELECT NAME FROM T_CATERER JOIN T_SUPPLY
  ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  WHERE SUPPLY_DATE >= '01.01.2017' 
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY NAME HAVING SUM(VOLUME) = MAX(VOLUME);
  GROUP BY NAME HAVING SUM(VOLUME) = MAX(VOLUME);







